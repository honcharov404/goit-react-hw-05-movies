{"version":3,"file":"static/js/461.9c836095.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Pages/MovieDetails/MovieDetails.module.css?729c","components/Pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetails_btn__8hYH9\",\"wrap\":\"MovieDetails_wrap__nJjAw\",\"img\":\"MovieDetails_img__5AAdt\",\"wrapDetails\":\"MovieDetails_wrapDetails__QW8ig\",\"title\":\"MovieDetails_title__EiCyk\",\"text\":\"MovieDetails_text__DS8uT\",\"subTitle\":\"MovieDetails_subTitle__SQrVy\",\"genresList\":\"MovieDetails_genresList__n5pk8\",\"genresItem\":\"MovieDetails_genresItem__7ez+0\",\"wrapInfo\":\"MovieDetails_wrapInfo__Cym40\",\"infoList\":\"MovieDetails_infoList__gtTCu\",\"infoItem\":\"MovieDetails_infoItem__fcNmV\"};","import Loader from 'components/Loader/Loader';\nimport React, { Suspense, useState } from 'react';\nimport { lazy } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { getMovieInfo, IMAGE_URL } from 'services/api';\n\nimport s from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/movies';\n  // console.log(location);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieInfo(movieId)\n      .then(resp => setMovie(resp))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <div>\n      <Link to={backLink}>\n        <button className={s.btn} type=\"button\">\n          GO BACK\n        </button>\n      </Link>\n      <div className={s.wrap}>\n        <img\n          className={s.img}\n          src={IMAGE_URL + movie.poster_path}\n          alt=\"poster\"\n        />\n        <div className={s.wrapDetails}>\n          <h2 className={s.title}>{movie.title}</h2>\n          <p className={s.text}>User Score: {movie.vote_average}</p>\n          <h3 className={s.subTitle}>Overview</h3>\n          <p className={s.text}>{movie.overview}</p>\n          <h3 className={s.subTitle}>Genres</h3>\n          <ul className={s.genresList}>\n            {movie.genres?.map(genre => {\n              return (\n                <li className={s.genresItem} key={genre.id}>\n                  {genre.name}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className={s.wrapInfo}>\n        <p className={s.text}>Additional information</p>\n        <ul className={s.infoList}>\n          <li className={s.infoItem}>\n            <Link state={{ from: backLink }} to={`cast`}>\n              Cast\n            </Link>\n          </li>\n          <li className={s.infoItem}>\n            <Link state={{ from: backLink }} to={`reviews`}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense>\n          <Routes>\n            <Route path=\"cast\" element={<Cast id={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews id={movieId} />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c5b7272df39592d3708482e6a1d8527d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrending() {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  //   console.log(resp.data.results);\n  return resp.data.results;\n}\n\nexport async function getSearchedMovies(query) {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  //   console.log(resp.data.results);\n  return resp.data.results;\n}\n\nexport async function getMovieInfo(movieId) {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  //   console.log(resp.data);\n  return resp.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const resp = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  //   console.log(resp.data.cast);\n  return resp.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const resp = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  //   console.log(resp.data.results);\n  return resp.data.results;\n}\n"],"names":["strokeColor","strokeWidth","animationDuration","width","visible","Cast","lazy","Reviews","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","backLink","useLocation","state","from","useEffect","getMovieInfo","then","resp","finally","Loader","to","className","s","type","src","IMAGE_URL","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id","Suspense","path","element","API_KEY","axios","getTrending","data","results","getSearchedMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}