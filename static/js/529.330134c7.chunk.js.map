{"version":3,"file":"static/js/529.330134c7.chunk.js","mappings":"mKAeA,IAZe,WACb,OACE,SAAC,KAAD,CACEA,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGd,C,6HCZD,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oBAAhF,EAA2G,qBAA3G,EAAuI,qBAAvI,EAAmK,qBAAnK,EAA8L,oBAA9L,EAA0N,sB,SCkF1N,EAzEe,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,QAwB9B,OAVAC,EAAAA,EAAAA,YAAU,WACHF,IACLN,GAAa,IACbS,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GAAI,OAAIb,EAAUa,EAAd,IACTC,SAAQ,WACPZ,GAAa,EACd,IACJ,GAAE,CAACM,IAEGP,GACL,SAACc,EAAA,EAAD,KAEA,4BACE,kBAAMC,UAAWC,EAAQC,SArBZ,SAAAC,GACfA,EAAEC,iBAEFb,EAAgB,CAAEC,KAAMX,GACzB,EAiBG,WACE,kBACEmB,UAAWC,EACXI,KAAK,OACLC,YAAY,uBACZzB,MAAOA,EACP0B,SAhCS,SAAAJ,GACf,IAAMK,EAAQL,EAAEM,OAAO5B,MACvBC,EAAS0B,EACV,KA+BK,mBAAQR,UAAWC,EAAOI,KAAK,SAA/B,yBAICtB,EAAO2B,QAAUlB,IAClB,eAAIQ,UAAWC,EAAf,SACGlB,EAAO4B,KAAI,SAAAC,GACV,OACE,eAAIZ,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXY,MAAO,CAAEC,KAAM3B,GACf4B,GAAE,kBAAaH,EAAMI,IAHvB,WAKE,gBACEhB,UAAWC,EACXgB,IAAKC,EAAAA,GAAYN,EAAMO,YACvBC,IAAI,YAEN,iBAAMpB,UAAWC,EAAjB,SAA2BW,EAAMS,YAXTT,EAAMI,GAerC,MAGJxB,GAA0B,IAAlBT,EAAO2B,SAAgB,2CAGrC,C,uNC/EKY,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAML,EAAY,kCAElB,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,oGACcD,EAAAA,EAAAA,IAAA,sCAAyCD,IADvD,cACCzB,EADD,yBAGEA,EAAK4B,KAAKC,SAHZ,kEAMA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCa,GAAjC,uFACce,EAAAA,EAAAA,IAAA,gCACQD,EADR,kBACyBd,IAFvC,cACCX,EADD,yBAKEA,EAAK4B,KAAKC,SALZ,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACcL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCN,IADrD,cACCzB,EADD,yBAGEA,EAAK4B,MAHP,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACcL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CN,IAD7D,cACCzB,EADD,yBAGEA,EAAK4B,KAAKK,MAHZ,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACcL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CN,IAD7D,cACCzB,EADD,yBAGEA,EAAK4B,KAAKC,SAHZ,kE","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Pages/Movies/Movies.module.css?72c0","components/Pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__OW5ni\",\"input\":\"Movies_input__pZf19\",\"btn\":\"Movies_btn__TDic4\",\"list\":\"Movies_list__j6TO6\",\"item\":\"Movies_item__GKMiE\",\"link\":\"Movies_link__u9pfa\",\"img\":\"Movies_img__S10ml\",\"inner\":\"Movies_inner__8Yhku\"};","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { getSearchedMovies, IMAGE_URL } from 'services/api';\n\nimport Loader from 'components/Loader/Loader';\n\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n\n  const onChange = e => {\n    const query = e.target.value;\n    setValue(query);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ name: value });\n  };\n  //   console.log(movies);\n\n  useEffect(() => {\n    if (!name) return;\n    setIsLoading(true);\n    getSearchedMovies(name)\n      .then(resp => setMovies(resp))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [name]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <div>\n      <form className={s.form} onSubmit={onSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"ENTER MOVIE TITLE...\"\n          value={value}\n          onChange={onChange}\n        />\n        <button className={s.btn} type=\"submit\">\n          SEARCH\n        </button>\n      </form>\n      {!!movies.length && name && (\n        <ul className={s.list}>\n          {movies.map(movie => {\n            return (\n              <li className={s.item} key={movie.id}>\n                <Link\n                  className={s.link}\n                  state={{ from: location }}\n                  to={`/movies/${movie.id}`}\n                >\n                  <img\n                    className={s.img}\n                    src={IMAGE_URL + movie.poster_path}\n                    alt=\"poster\"\n                  />\n                  <span className={s.inner}>{movie.title}</span>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {name && movies.length === 0 && <p>No results...</p>}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'c5b7272df39592d3708482e6a1d8527d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrending() {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  //   console.log(resp.data.results);\n  return resp.data.results;\n}\n\nexport async function getSearchedMovies(query) {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  //   console.log(resp.data.results);\n  return resp.data.results;\n}\n\nexport async function getMovieInfo(movieId) {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  //   console.log(resp.data);\n  return resp.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const resp = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  //   console.log(resp.data.cast);\n  return resp.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const resp = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  //   console.log(resp.data.results);\n  return resp.data.results;\n}\n"],"names":["strokeColor","strokeWidth","animationDuration","width","visible","useState","value","setValue","movies","setMovies","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","name","get","useEffect","getSearchedMovies","then","resp","finally","Loader","className","s","onSubmit","e","preventDefault","type","placeholder","onChange","query","target","length","map","movie","state","from","to","id","src","IMAGE_URL","poster_path","alt","title","API_KEY","axios","getTrending","data","results","getMovieInfo","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}